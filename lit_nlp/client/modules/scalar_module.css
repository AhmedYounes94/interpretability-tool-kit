.label {
  margin-bottom: 4px;
}

.primary-selected-point {
  r: 6px;
  opacity: 1.0;
  stroke-width: 2px;
  stroke: var(--lit-cyea-700);
}

.hovered-point {
  r: 6px;
  opacity: 1.0;
  /* !important required to override explicit element.fill attr set by D3 */
  fill: var(--lit-mage-400) !important;
  stroke-width: 2px;
  stroke: var(--lit-mage-400);
  cursor: pointer;
}

.selected-point {
  r: 5px;
  fill-opacity: 0.8;
  stroke-width: 2px;
  stroke: #fff;
}

.reference-point {
  r: 6px;
  fill-opacity: 1;
  fill: var(--lit-mage-400) !important;
  stroke-width: 2px;
  stroke: var(--lit-mage-700);
}

.point {
  r: 4px;
  opacity: .25;
}

.collapse-bar {
  width: 100%;
  height: 30px;
  cursor: pointer;
  padding: 2px 8px;
  width: 100%;
  outline: none;
  display: flex;
  justify-content: space-between;
  box-sizing: border-box;
}

.scatterplot-background {
  padding-bottom: 15px;
  padding-top: 5px;
}

.axis-title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  flex: 1;
}

.selected-value {
  padding-right: 8px;
}

.module-container {
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  height: 100%;
  justify-content: space-between;
}

.module-footer {
  justify-content: space-between;
}

/**
 * d3.brush() sets up some questionable CSS styles, like pointer-events: all,
 * which will cause this module to respond to clicks in surprising ways even
 * when it is hidden. So, override this to 'visible' keep this from happening.
 */
g#brushGroup {
  pointer-events: visible !important;
}

#brushGroup .overlay {
  pointer-events: visible !important;
}
